<?xml version="1.0"?>

<launch>
  <!-- Image topics are should be set -->
  <arg name="left_image_topic" default="/stereo_camera/left/image_rect_color"/>
  <arg name="right_image_topic" default="/stereo_camera/right/image_rect_color"/>
  <!-- Should be set if you use not default node -->
  <arg name="optical_flow_topic" default="/pwc_net/optical_flow"/>
  <arg name="disparity_flow_topic" default="/sgm_gpu/disparity"/>
  <!-- Set true if you use simulator -->
  <arg name="use_sim_time" default="false"/>
  <!-- Set it if you use other transport for image -->
  <arg name="image_transport" default="raw"/>

  <param name="use_sim_time" type="bool" value="$(arg use_sim_time)"/>

  <arg name="nodelet_manager_name" value="nodelet_manager"/>
  <node name="$(arg nodelet_manager_name)" pkg="nodelet" type="nodelet" args="manager"/>

  <node name="viso2" pkg="viso2_ros" type="stereo_odometer" respawn="true">
    <remap from="stereo" to="synchronized"/>
    <remap from="image" to="image_rect_color"/>
    
    <param name="base_link_frame_id" value="stereo_robot/camera_link"/>
    <param name="publish_tf" value="false"/>
  </node>

  <node name="input_synchronizer" pkg="nodelet" type="nodelet" args="load scene_flow_constructor/input_synchronizer $(arg nodelet_manager_name)">
    <remap from="synchronizer_input_left_rect_image" to="$(arg left_image_topic)"/>
    <remap from="synchronizer_input_right_rect_image" to="$(arg right_image_topic)"/>

    <remap from="synchronizer_output_left_rect_image" to="/synchronized/left/image_rect_color"/>
    <remap from="synchronizer_output_right_rect_image" to="/synchronized/right/image_rect_color"/>

    <remap from="viso2_info" to="/viso2/info"/>
    <remap from="optical_flow_left" to="$(arg optical_flow_topic)"/>
    <remap from="disparity_image" to="$(arg disparity_flow_topic)"/>

    <param name="image_transport" value="$(arg image_transport)"/>
  </node>

  <node name="scene_flow_constructor" pkg="nodelet" type="nodelet" args="load scene_flow_constructor/scene_flow_constructor $(arg nodelet_manager_name)">
    <remap from="camera_transform" to="/viso2/camera_frame_transform"/>
    <remap from="optical_flow_left" to="$(arg optical_flow_topic)"/>
    <remap from="disparity_image" to="$(arg disparity_flow_topic)"/>
    <remap from="left_camera_info" to="/synchronized/left/camera_info"/>
  </node>

  <node name="clusterer" pkg="nodelet" type="nodelet" args="load scene_flow_clusterer/scene_flow_clusterer $(arg nodelet_manager_name)">
    <remap from="velocity_pc" to="/scene_flow_constructor/velocity_pc"/>
  </node>

  <node name="moving_object_tracker" pkg="moving_object_tracker" type="moving_objects_tracker_node"/>
  
  <!-- Nodes for visualization -->
  <node name="left_flow_view" pkg="nodelet" type="nodelet" args="load dense_flow_view/dense_flow_view $(arg nodelet_manager_name)">
    <remap from="flow" to="$(arg optical_flow_topic)"/>
    <remap from="flow_image" to="left_flow_image"/>
  </node>
  <node name="static_flow_view" pkg="nodelet" type="nodelet" args="load dense_flow_view/dense_flow_view $(arg nodelet_manager_name)">
    <remap from="flow" to="/scene_flow_constructor/static_flow"/>
    <remap from="flow_image" to="static_flow_image"/>
  </node>
  <node name="disparity_view" pkg="nodelet" type="nodelet" args="load disparity_visualize/disparity_visualize $(arg nodelet_manager_name)">
    <remap from="disparity" to="$(arg disparity_flow_topic)"/>
  </node>
  <node name="moving_object_to_marker" pkg="moving_object_to_marker" type="moving_object_to_marker">
    <remap from="moving_object_array" to="moving_objects"/>
  </node>
  <node name="project_moving_object_on_image" pkg="project_moving_objects_on_image" type="project_moving_objects_on_image">
    <remap from="input_image" to="/synchronized/left/image_rect_color"/>
  </node>
  <node name="project_tracked_object_on_image" pkg="project_moving_objects_on_image" type="project_moving_objects_on_image">
    <remap from="input_image" to="/synchronized/left/image_rect_color"/>
    <remap from="moving_objects" to="tracked_moving_objects"/>
    <remap from="moving_objects_image" to="tracked_objects_image"/>

    <param name="red" value="0"/>
    <param name="green" value="255"/>
  </node>
</launch>
